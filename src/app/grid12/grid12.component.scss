*{
  background: rgba(33, 0, 0,0.1);
  border: 1px solid #000000;
  box-sizing: border-box;
}

.d-flex{
  display: flex;
}

.flex-direction-row{
  flex-direction: row;
}
.flex-direction-column{
  flex-direction: column;
}
.flex-wrap{
  flex-wrap: wrap;
}
.justify-content-between{
  justify-content: space-between;
}

ul{
  margin:0;
  padding: 0;
  list-style-type: none;
  flex-direction: column;
}

.icon-nav{
  display: inline; /* apparait inline sur des mobile (et plus si non surchargé*/
}

.position-relative{
  position: relative;
}
.position-absolute{
  position: absolute;
}
.slider{
  height: 60px;
}

.slider ul{
  top: 0;
  left: 0;
  height: 60px;
  overflow:hidden; /*scroll*/
  width: 99999px;
}

.slider ul li{
  display:inline-block;
  height: 60px;
  width: 60px;
  padding: 0 15px;
}

.img{
  width: 100%;
}

// poid des selecteur css

//un selecteur simple pour cibler tous les elements du dom avec leur nom de balse
h1{
  background: red;
}
h1{
  background: green;
}
// un selecteur simple a un poids 1: si deux selecteur qui ont le même poids,
// le dernier dans fichier css sera pris n compte

// pour cibler tous les elements du nom à partir de leur nom de classe on utilise
// un selecteur de class  --> vaut 10 points
// un selecteur de class est pris en compte contre  un selecteur simple même si le selecteur
// simple est defini après dans le fichiers css
.specialTitle{
  background: yellow;
}

// pour cibler un element du dom a partir de son nom d'id, on utilse n
// selecteur d'id : a un poid de  100point, choisi contre selecteru de classe ou simple

#idSpecialTitle{
  background: palevioletred;
}

// pour cibler un ou plusieurs elements du dom a partir d'un attribut html,
// on utilise un selecteur d'attribut 10 points
//exp tous les elements qui ont un attribut src, ou attribut avec une valeur
[src]{
  border:4px solid red;
}
[src="../../assets/img/paysage1.jpg"]{
  border:4px solid blue;
}

[class="specialTitle"]{
  background: orange;
}

[class="idSpecialTitle"]{
  background: orange;
}

//pour evietr de multipilier les class dans le html qui alourdissent inutilement
// le html et rendement moins lisible et moins réutilisable et moins maintenable
// on peut utiliser des selecteur combinatoir
// exp: tout les element d'un bloc sans les autre, bloc déja avec un selecteur de class
// --> combiner pour cibler les enfants (direct ou indirect) de ce bloc (sans utiliser une classe pour chacun)
// --> les points du seclecteur s'additionne
.card img{
  border: 5px dotted white;
}

// cibler que les enfants directs
.card > img{
  border: 5px dotted white;
}

// cible tous les descendants img de 'un bloc div obligtaoirement stylé avec la classe card
div.card img{
  border: 5px dotted white;
}

// pseudo selecteur: cibler un elements parmi plusieurs du même type par exemple
// first-child : first child seulement s 'il est de type p
// .card p:first-child{
//   font-size: 14px;
// }

// fontsize unit em: em =1 size du bloc ascendant le plus proche qui a un font de size
//                   rem= 1 font size de navigateur par defaut (tous les device le body font size :16px)
//                   rem on prend pas en compte le font size des ascendants

.card{font-size: 30px}
.card p:nth-child(3){
  //font-size: 14px;
  font-size: 1em;
}
.card p:nth-child(4){
  font-size: 1rem;
}

// un style definit directement dans la balise html ca vaut 1000 points
// exp <p style="font-size:20px"...>   a eviter car code non maintenable
// utlisé dans des editeur de type WYSIWYG  -> tout le code html stocké dans la bd
// WYSIWYG peut etre utilisé par le marketing pour changer pages sans ecrire de code

// important ca vaux 10000 points : a eviter, ca casse le principe de l'héritage
// utilisation important ca peut rendre les editeurs WYSIYG
.card p:nth-child(3){
  font-size: 1em !important;
}

/*
#container{
  display: flex;
  flex-direction: column;
}
*/

.col-1 {
  width: calc(100%/12*1);
}
.col-2 {
  width: calc(100%/12*2);
}
.col-3 {
  width: calc(100%/12*3);
}
.col-4 {
  width: calc(100%/12*4);
}
.col-5 {
  width: calc(100%/12*5);
}
.col-6 {
  width: calc(100%/12*6);
}
.col-7 {
  width: calc(100%/12*7);
}
.col-8 {
  width: calc(100%/12*8);
}
.col-9 {
  width: calc(100%/12*9);
}
.col-10 {
  width: calc(100%/12*10);
}
.col-11 {
  width: calc(100%/12*11);
}
.col-12 {
  width: calc(100%/12*12);
}

@media (min-width: 576px) {
  .col-sm-1 {
    width: calc(100%/12*1);
  }
  .col-sm-2 {
    width: calc(100%/12*2);
  }
  .col-sm-3 {
    width: calc(100%/12*3);
  }
  .col-sm-4 {
    width: calc(100%/12*4);
  }
  .col-sm-5 {
    width: calc(100%/12*5);
  }
  .col-sm-6 {
    width: calc(100%/12*6);
  }
  .col-sm-7 {
    width: calc(100%/12*7);
  }
  .col-sm-8 {
    width: calc(100%/12*8);
  }
  .col-sm-9 {
    width: calc(100%/12*9);
  }
  .col-sm-10 {
    width: calc(100%/12*10);
  }
  .col-sm-11 {
    width: calc(100%/12*11);
  }
  .col-sm-12 {
    width: calc(100%/12*12);
  }
}

@media (min-width:768px) {
  .icon-nav{
    display: none; /*icon disparait sur des ecran plus 768*/
  }

  ul{
    flex-direction: row; /* surcharger sur des ecran plus grand*/
  }
  .col-md-1 {
    width: calc(100%/12*1);
  }
  .col-md-2 {
    width: calc(100%/12*2);
  }
  .col-md-3 {
    width: calc(100%/12*3);
  }
  .col-md-4 {
    width: calc(100%/12*4);
  }
  .col-md-5 {
    width: calc(100%/12*5);
  }
  .col-md-6 {
    width: calc(100%/12*6);
  }
  .col-md-7 {
    width: calc(100%/12*7);
  }
  .col-md-8 {
    width: calc(100%/12*8);
  }
  .col-md-9 {
    width: calc(100%/12*9);
  }
  .col-md-10 {
    width: calc(100%/12*10);
  }
  .col-md-11 {
    width: calc(100%/12*11);
  }
  .col-sm-12 {
    width: calc(100%/12*12);
  }
}

@media (min-width:992px) {
  .col-lg-1 {
    width: calc(100%/12*1);
  }
  .col-lg-2 {
    width: calc(100%/12*2);
  }
  .col-lg-3 {
    width: calc(100%/12*3);
  }
  .col-lg-4 {
    width: calc(100%/12*4);
  }
  .col-lg-5 {
    width: calc(100%/12*5);
  }
  .col-lg-6 {
    width: calc(100%/12*6);
  }
  .col-lg-7 {
    width: calc(100%/12*7);
  }
  .col-lg-8 {
    width: calc(100%/12*8);
  }
  .col-lg-9 {
    width: calc(100%/12*9);
  }
  .col-lg-10 {
    width: calc(100%/12*10);
  }
  .col-lg-11 {
    width: calc(100%/12*11);
  }
  .col-lg-12 {
    width: calc(100%/12*12);
  }
}

@media (min-width:1200px) {
  .col-xl-1 {
    width: calc(100%/12*1);
  }
  .col-xl-2 {
    width: calc(100%/12*2);
  }
  .col-xl-3 {
    width: calc(100%/12*3);
  }
  .col-xl-4 {
    width: calc(100%/12*4);
  }
  .col-xl-5 {
    width: calc(100%/12*5);
  }
  .col-xl-6 {
    width: calc(100%/12*6);
  }
  .col-xl-7 {
    width: calc(100%/12*7);
  }
  .col-xl-8 {
    width: calc(100%/12*8);
  }
  .col-xl-9 {
    width: calc(100%/12*9);
  }
  .col-xl-10 {
    width: calc(100%/12*10);
  }
  .col-xl-11 {
    width: calc(100%/12*11);
  }
  .col-xl-12 {
    width: calc(100%/12*12);
  }
}

@media (min-width:1400px) {
  .col-xxl-1 {
    width: calc(100%/12*1);
  }
  .col-xxl-2 {
    width: calc(100%/12*2);
  }
  .col-xxl-3 {
    width: calc(100%/12*3);
  }
  .col-xxl-4 {
    width: calc(100%/12*4);
  }
  .col-xxl-5 {
    width: calc(100%/12*5);
  }
  .col-xxl-6 {
    width: calc(100%/12*6);
  }
  .col-xxl-7 {
    width: calc(100%/12*7);
  }
  .col-xxl-8 {
    width: calc(100%/12*8);
  }
  .col-xxl-9 {
    width: calc(100%/12*9);
  }
  .col-xxl-10 {
    width: calc(100%/12*10);
  }
  .col-xxl-11 {
    width: calc(100%/12*11);
  }
  .col-xxl-12 {
    width: calc(100%/12*12);
  }
}

